@page "/login"
@page "/login/{ReturnUrl}"
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Net.Http.Json
@attribute [AllowAnonymous]
@inject NavigationManager NavigationManager
@inject ILogger<Login> Logger
@rendermode InteractiveServer

<PageTitle>Login</PageTitle>

<div class="flex-horizontal center expand">
    <div class="subtle-container" style="width: 350px;">
        <h1 class="center-text">Login</h1>
        
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="font-error center-text">@errorMessage</div>
        }
        
        <form method="post" action="/api/auth/login" class="flex-vertical">
            <input type="hidden" name="returnUrl" value="@(ReturnUrl ?? "/feed")" />
            
            <label>Email</label>
            <input type="email" name="email" class="input-single-line fill-width" required />
            
            <label>Password</label>
            <input type="password" name="password" class="input-single-line fill-width" required />
            
            <div class="flex-vertical pad-top">
                <button type="submit" class="button-suggested-action fill-width">Login</button>
            </div>
        </form>
        
        <div class="center-text">
            <a href="/register">Don't have an account? Register here</a>
        </div>
    </div>
</div>

@code {
    private string? errorMessage;

    [Parameter]
    public string? ReturnUrl { get; set; }

    protected override void OnInitialized()
    {
        Logger.LogInformation("Login page initialized");
        
        // Get return URL from query string if not provided in route
        if (string.IsNullOrEmpty(ReturnUrl))
        {
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("ReturnUrl", out var returnUrl))
            {
                ReturnUrl = returnUrl;
                Logger.LogInformation("Return URL set from query: {ReturnUrl}", ReturnUrl);
            }
            
            // Get error message from query string
            if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("error", out var error))
            {
                errorMessage = Uri.UnescapeDataString(error);
                Logger.LogWarning("Error message found in query: {ErrorMessage}", errorMessage);
            }
        }
    }
} 