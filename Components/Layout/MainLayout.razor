@inherits LayoutComponentBase
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider
@inject ILogger<MainLayout> Logger
@inject IJSRuntime JS

<CascadingAuthenticationState>
<CascadingValue Value="session">
<CascadingValue Value="UpdateLayout">
<div class="app-container @(session.ThemeClasses())">
    <div class="app-layout">
        @{
            var currentUrl = NavigationManager.Uri.ToLower();
            var isAuthPage = currentUrl.Contains("/login") || currentUrl.Contains("/register");
        }

        @if (isAuthPage)
        {
            <main class="pad-top">
                @Body
            </main>
        }
        else
        {
            <AuthorizeView>
                <Authorized>
                    <nav class="desktop-sidebar flex-vertical">
                        <h1 class="app-title">HealthApp</h1>

                        <a href="/feed" class="nav-item @GetActiveClass("/feed")">
                            <span class="nav-icon">🏠</span>
                            Feed
                        </a>
                        <a href="/locations" class="nav-item @GetActiveClass("/locations")">
                            <span class="nav-icon">📍</span>
                            Locations
                        </a>
                        <a href="/following" class="nav-item @GetActiveClass("/following")">
                            <span class="nav-icon">👥</span>
                            Following
                        </a>
                        <a href="/profile" class="nav-item @GetActiveClass("/profile")">
                            <span class="nav-icon">👤</span>
                            Profile
                        </a>
                        <a href="/settings" class="nav-item @GetActiveClass("/settings")">
                            <span class="nav-icon">⚙️</span>
                            Settings
                        </a>

                        <div class="logout-container">
                            <form method="post" action="/api/auth/logout" id="logoutForm" class="logout-form">
                                <button type="submit" class="nav-item logout-button">
                                    <span class="nav-icon">🚪</span>
                                    Logout
                                </button>
                            </form>
                        </div>
                    </nav>

                    <nav class="mobile-sidebar flex-horizontal">
                        <h1 class="app-title">HealthApp</h1>
                        <div class="mobile-sidebar-icons flex-horizontal">
                            <a href="/feed" class="nav-item @GetActiveClass("/feed")">
                                <span class="nav-icon">🏠</span>
                            </a>
                            <a href="/locations" class="nav-item @GetActiveClass("/locations")">
                                <span class="nav-icon">📍</span>
                            </a>
                            <a href="/following" class="nav-item @GetActiveClass("/following")">
                                <span class="nav-icon">👥</span>
                            </a>
                            <a href="/profile" class="nav-item @GetActiveClass("/profile")">
                                <span class="nav-icon">👤</span>
                            </a>
                            <a href="/settings" class="nav-item @GetActiveClass("/settings")">
                                <span class="nav-icon">⚙️</span>
                            </a>
                            <form method="post" action="/api/auth/logout" style="display: contents;">
                                <button type="submit" class="nav-item logout-button">
                                    <span class="nav-icon">🚪</span>
                                </button>
                            </form>
                        </div>
                    </nav>

                    <main class="flex-vertical pad">
                        @Body
                    </main>
                </Authorized>
                <NotAuthorized>
                    <main class="flex-vertical pad">
                        @Body
                    </main>
                </NotAuthorized>
            </AuthorizeView>
        }
    </div>
</div>
</CascadingValue>
</CascadingValue>
</CascadingAuthenticationState>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private string GetActiveClass(string path)
    {
        var currentPath = NavigationManager.Uri.ToLower();
        return currentPath.EndsWith(path.ToLower()) ? "active" : "";
    }

    private Session session = new Session();

    private EventCallback UpdateLayout => EventCallback.Factory.Create(this, updateLayout);

    private void updateLayout()
    {
        StateHasChanged();
    }

    private IJSObjectReference? module;
    private DotNetObjectReference<MainLayout>? objRef;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            objRef = DotNetObjectReference.Create(this);
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                "./Components/Layout/MainLayout.razor.js");
            await module!.InvokeVoidAsync("init", objRef);
        }
    }

    [JSInvokable]
    public void handleSystemThemeChanged(bool prefersDark, bool prefersMoreContrast) {
        session.SystemTheme = (prefersDark, prefersMoreContrast) switch {
            (false, false) => Session.ThemeChoice.Light,
            (true, false) => Session.ThemeChoice.Dark,
            (false, true) => Session.ThemeChoice.HighContrastLight,
            (true, true) => Session.ThemeChoice.HighContrastDark,
        };
        updateLayout();
    }
}
